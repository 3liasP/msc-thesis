name: Build Thesis PDF

on:
  push:
    tags:
      - "thesis-v*" # Trigger on thesis version tags like thesis-v1.0.0, thesis-v2.1.3, etc.

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-pdf:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Compile thesis
        uses: xu-cheng/texlive-action@v3
        with:
          run: |
            chmod +x compile.sh
            ./compile.sh

      - name: Upload PDF artifact
        uses: actions/upload-artifact@v4
        with:
          name: thesis-pdf-${{ github.ref_name }}
          path: main.pdf

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: msc-${{ github.ref_name }}
          body: |
            Automated release of thesis PDF.

            **Download**: [main.pdf](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/main.pdf)
          files: main.pdf
          draft: false
          prerelease: false

      - name: Commit and push latest release info
        run: |
          # Switch to main branch
          git checkout main
          git pull origin main

          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Update LATEST_RELEASE.md with new version info
          cat > LATEST_RELEASE.md << EOF
          # Latest Thesis Release

          [![Latest Release](https://img.shields.io/github/v/release/${{ github.repository }}?label=Latest%20Thesis&color=blue)](https://github.com/${{ github.repository }}/releases/latest)

          **Latest Version**: [${{ github.ref_name }}](https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }})

          **Download PDF**: [main.pdf](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/main.pdf)

          *This file is automatically updated when new thesis versions are released.*
          EOF

          # Add, commit and push
          git add LATEST_RELEASE.md
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update latest release info for ${{ github.ref_name }}"
            git push origin main
          fi
